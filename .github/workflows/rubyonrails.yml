# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Ruby on Rails CI"
on:
  push:
    branches: [ main ]
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: burrow_1_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
    env:
      RAILS_ENV: test
      # DATABASE_URL: "postgres://postgres:password@localhost:5432/rails_test"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      # Add or replace dependency steps here
      # - name: Install Ruby and gems
      #   uses: ruby/setup-ruby@8f312efe1262fb463d906e9bf040319394c18d3e # v1.92
      #   with:
      #     bundler-cache: true
      
      # Build the docker image
      - name: Build the Docker image
        run: RAILS_ENV=test docker-compose up --build -d
      - name: View docker containers
        run: docker ps -a
      - name: View logs for web container
        run: docker logs burrow_1_web
        
      # Setting up db
      - name: Set up database schema
        run: docker exec -it burrow_1_web_1 sh -c "bundle exec rails db:setup"
        
      # Add or replace test runners here
      - name: Run tests
        run: docker exec -it burrow_1_web_1 sh -c "bin/rake"


#  lint:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#      - name: Install Ruby and gems
#        uses: ruby/setup-ruby@8f312efe1262fb463d906e9bf040319394c18d3e # v1.92
#        with:
#          bundler-cache: true
#      # Add or replace any other lints here
#      - name: Security audit application code
#        run: bundle exec brakeman -q -w2
#      - name: Lint Ruby files
#        run: bundle exec rubocop --parallel
#      - name: Security audit dependencies
#        run: bundle exec bundle audit --update
